name: Build Multi-Architecture Binaries

on:
  push:
    paths:
      - 'Version'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            suffix: linux-amd64
          - goos: linux
            goarch: arm64
            suffix: linux-arm64
          - goos: linux
            goarch: arm
            goarm: 7
            suffix: linux-armv7
          - goos: linux
            goarch: arm
            goarm: 6
            suffix: linux-armv6
          - goos: linux
            goarch: 386
            suffix: linux-i386
          - goos: linux
            goarch: mips64le
            suffix: linux-mips64le
          - goos: linux
            goarch: mips64
            suffix: linux-mips64
          - goos: linux
            goarch: ppc64le
            suffix: linux-ppc64le
          - goos: linux
            goarch: s390x
            suffix: linux-s390x

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Get version
      id: version
      run: echo "VERSION=$(cat Version)" >> $GITHUB_OUTPUT

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        GOARM: ${{ matrix.goarm }}
      run: |
        mkdir -p build
        go build -ldflags="-s -w" -o build/netron-${{ steps.version.outputs.VERSION }}-${{ matrix.suffix }} .

    - name: Create archive
      run: |
        cd build
        tar -czf netron-${{ steps.version.outputs.VERSION }}-${{ matrix.suffix }}.tar.gz netron-${{ steps.version.outputs.VERSION }}-${{ matrix.suffix }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: netron-${{ steps.version.outputs.VERSION }}-${{ matrix.suffix }}
        path: build/netron-${{ steps.version.outputs.VERSION }}-${{ matrix.suffix }}.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Get version
      id: version
      run: echo "VERSION=$(cat Version)" >> $GITHUB_OUTPUT
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: release-assets
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.version.outputs.VERSION }}
        name: Release v${{ steps.version.outputs.VERSION }}
        draft: false
        prerelease: false
        files: release-assets/*/*.tar.gz
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}